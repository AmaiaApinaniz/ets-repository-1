<?xml version="1.0" encoding="utf-8"?>
<ExecutableTestSuite xmlns="http://www.interactive-instruments.de/etf/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="EID4441cbde-371f-4899-90b3-145f4fd08ebc" xsi:schemaLocation="http://www.interactive-instruments.de/etf/2.0 ../../schema/model/resultSet.xsd">
	<itemHash>bQ==</itemHash>
	<remoteResource>http://github.com/inspire-eu-validation/ets-repository/data-tn/tn-as</remoteResource>
	<localPath>/auto</localPath>
	<label>Conformance class: Application schema, Transport Networks Common</label>
	<description><![CDATA[This test suite examines requirements associated with the application schema.<br/><br/>
Note that since both code-list-valued properties of this application schema may be extended without restrictions, there is no test case for code list values.<br/><br/>
<b>This is a draft version. It has limitations and is expected to contain errors.</b> Please report any issues or problems <a href="https://github.com/interactive-instruments/ets-repository/issues" target="_blank">in GitHub</a>.<br/><br/>
Known limitations are documented in the description of the applicable test case or test assertion. There is a general limitation in all assertions that extensions in additional application schemas are not fully supported.<br/><br/>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-tn/3.2/tn-as" target="_blank">Conformance Class 'Application schema, Transport Networks Common'</a><br/><br/>
Pre-requisite conformance classes:
<ul><li><a href="http://inspire.ec.europa.eu/id/ats/data-tn/3.2/tn-gml" target="_blank">Conformance Class 'GML application schemas, Transport Networks'</a></li></ul>]]></description>
  <reference>../../inspire-bsxets.xq</reference>
	<version>0.1.0</version>
	<author>PwC</author>
	<creationDate>2016-12-09T00:00:00Z</creationDate>
	<lastEditor>PwC</lastEditor>
	<lastUpdateDate>2016-12-12T00:00:00Z</lastUpdateDate>
	<tags>
		<tag ref="EID169dad4a-2b71-4077-9e85-e686b7373b05"/>
	</tags>
	<testDriver ref="EID4dddc9e2-1b21-40b7-af70-6a2d156ad130"/>
	<translationTemplateBundle ref="EID70a263c0-0ad7-42f2-9d4d-0d8a4ca71b52"/>
	<ParameterList name="ETF Standard Parameters for XML test objects">
		<parameter name="files_to_test" required="true">
			<defaultValue>.*</defaultValue>
			<description ref="TR.filesToTest"/>
			<allowedValues>.*</allowedValues>
			<type>string</type>
		</parameter>
		<parameter name="tests_to_execute" required="false">
			<defaultValue>.*</defaultValue>
			<description ref="TR.testsToExecute"/>
			<allowedValues>.*</allowedValues>
			<type>string</type>
		</parameter>
	</ParameterList>
	<supportedTestObjectTypes>
		<testObjectType ref="EIDe1d4a306-7a78-4a3b-ae2d-cf5f0810853e"/>
	</supportedTestObjectTypes>
	<dependencies>
		<executableTestSuite ref="EIDe6800faf-2e56-47df-831a-75a96b35f33d"/>
	</dependencies>
	<testModules>
		<TestModule id="EIDe11a7179-a5d8-4556-a94a-90fcfb7e6ffd">
			<label>IGNORE</label>
			<description>IGNORE</description>
			<parent ref="EID4441cbde-371f-4899-90b3-145f4fd08ebc"/>
			<testCases>
 				<TestCase id="EID14b1c9d9-59fe-4983-9e91-b5ec14d743a6">
				  <label>Code list values</label>
				  <description>Verify whether all attributes whose value type is a code list take the values set out therein.</description>
				  <parent ref="EIDe11a7179-a5d8-4556-a94a-90fcfb7e6ffd"/>
					<testSteps>
						<TestStep id="EID21c7382b-8890-46b5-869d-756c1fcfad57">
						  <label>IGNORE</label>
						  <description>IGNORE</description>
						  <parent ref="EID14b1c9d9-59fe-4983-9e91-b5ec14d743a6"/>
						  <statementForExecution>not applicable</statementForExecution>
						  <testItemType ref="EIDf483e8e8-06b9-4900-ab36-tnad0d7f22f0"/>
							<testAssertions>
						  		<TestAssertion id="EID28a341d3-c1cb-47fd-a2f4-1148cdffcde4">
							 		<label>tn-as.a.1: AccessRestrictionValue attributes</label>
									<description><![CDATA[When an attribute has a code list as its type, verify that the values comply with the definitions and include the values set out in Annex II of the regulation. For this attribute, the allowed values are specified in code list <a href='http://inspire.ec.europa.eu/codelist/AccessRestrictionValue'>http://inspire.ec.europa.eu/codelist/AccessRestrictionValue</a>.<br/>For datasets using version 3 of the GML application schema, the value is the last path element of the code list value URI and it is in the child text node. For datasets using version 4 of the GML application schema, the value is in the xlink:href XML attribute and is the HTTP URI of the code list value.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): Types for the Exchange and Classification of Spatial Objects.  For the exchange and classification of spatial objects from data sets meeting the conditions laid down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): Types for the Exchange and Classification of Spatial Objects. The enumerations and code lists used in attributes or association roles of spatial object types or data types shall comply with the definitions and include the values set out in Annex II. The enumeration and code list values are uniquely identified by language-neutral mnemonic codes for computers. The values may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Code Lists and Enumerations. Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code Lists and Enumerations. Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Code Lists and Enumerations. Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Code Lists and Enumerations. Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-tn/3.2/tn-as/features" target="_blank">Abstract Test Case 'Code list values'</a>]]></description>
									<parent ref="EID21c7382b-8890-46b5-869d-756c1fcfad57"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
(: TODO: extend with subtypes :)
let $features3 := $features[self::tn3:AccessRestriction]
let $features4 := $features[self::tn:AccessRestriction]
let $messages := local:check-code-list-values($features3, $features4, 'restriction', 'http://inspire.ec.europa.eu/codelist/AccessRestrictionValue')
return (if ($messages) then 'FAILED' else 'PASSED', $messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
							 		<translationTemplates>
										<translationTemplate ref="TR.reviewCodeListValue"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
							 		</translationTemplates>
					  			</TestAssertion>
					  			<TestAssertion id="EID1a33615b-0723-4d4f-9bc3-69f0bac3572a">
							 		<label>tn-as.a.2: RestrictionTypeValue attributes</label>
									<description><![CDATA[When an attribute has a code list as its type, verify that the values comply with the definitions and include the values set out in Annex II of the regulation. For this attribute, the allowed values are specified in code list <a href='http://inspire.ec.europa.eu/codelist/RestrictionTypeValue'>http://inspire.ec.europa.eu/codelist/RestrictionTypeValue</a>.<br/>For datasets using version 3 of the GML application schema, the value is the last path element of the code list value URI and it is in the child text node. For datasets using version 4 of the GML application schema, the value is in the xlink:href XML attribute and is the HTTP URI of the code list value.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (1): Types for the Exchange and Classification of Spatial Objects.  For the exchange and classification of spatial objects from data sets meeting the conditions laid down in Article 4 of Directive 2007/2/EC, Member States shall use the spatial object types and associated data types, enumerations and code lists that are defined in Annexes II, III and IV for the themes the data sets relate to.</li>
<li>IR Requirement Article 4 (3): Types for the Exchange and Classification of Spatial Objects. The enumerations and code lists used in attributes or association roles of spatial object types or data types shall comply with the definitions and include the values set out in Annex II. The enumeration and code list values are uniquely identified by language-neutral mnemonic codes for computers. The values may also include a language-specific name to be used for human interaction.</li>
<li>IR Requirement Article 6 (1): Code Lists and Enumerations. Codelists shall be of one of the following types, as specified in the Annexes:
<ol>
<li>code lists whose allowed values comprise only the values specified in this Regulation;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
narrower values defined by data providers;</li>
<li>code lists whose allowed values comprise the values specified in this Regulation and
additional values at any level defined by data providers;</li>
<li>code lists, whose allowed values comprise any values defined by data providers.</li>
</ol>
For the purposes of points 2, 3 and 4, in addition to the allowed values, data providers may use the values specified in the relevant INSPIRE Technical Guidance document available on the INSPIRE web site of the Joint Research Centre.</li>
<li>IR Requirement Article 6 (2): Code Lists and Enumerations. Code lists may be hierarchical. Values of hierarchical code lists may have a more generic parent value. Where the valid values of a hierarchical code list are specified in a table in this Regulation, the parent values are listed in the last column.</li>
<li>IR Requirement Article 6 (3): Code Lists and Enumerations. Where, for an attribute whose type is a code list as referred to in points 2, 3 or 4 of paragraph 1, a data provider provides a value that is not specified in this Regulation, that value and its definition shall be made available in a register.</li>
<li>IR Requirement Article 6 (4): Code Lists and Enumerations. Attributes or association roles of spatial object types or data types whose type is a code list may only take values that are allowed according to the specification of the code list.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-tn/3.2/tn-as/features" target="_blank">Abstract Test Case 'Code list values'</a>]]></description>
									<parent ref="EID21c7382b-8890-46b5-869d-756c1fcfad57"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
(: TODO: extend with subtypes :)
let $features3 := $features[(self::tn3:RestrictionForVehicles or self::tn3:RestrictionForWaterVehicles)]
let $features4 := $features[(self::tn:RestrictionForVehicles or self::tn:RestrictionForWaterVehicles)]
let $messages := local:check-code-list-values($features3, $features4, 'restrictionType', 'http://inspire.ec.europa.eu/codelist/RestrictionTypeValue')
return (if ($messages) then 'FAILED' else 'PASSED', $messages)
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
							 		<translationTemplates>
										<translationTemplate ref="TR.reviewCodeListValue"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
							 		</translationTemplates>
					  			</TestAssertion>
							</testAssertions>
				 		</TestStep>
			  	  	</testSteps>
				</TestCase>
				<TestCase id="EIDaf5b50fc-96a3-49e9-b015-d1400736687b">
				<label>Constraints</label>
				<description>Verify that the features provided in the dataset adhere to the constraints specified in the INSPIRE application schema.</description>
				<parent ref="EIDe11a7179-a5d8-4556-a94a-90fcfb7e6ffd"/>
					<testSteps>
						<TestStep id="EID6bb73535-1e46-4a58-9cb1-f9d4acc653eb">
						  <label>IGNORE</label>
						  <description>IGNORE</description>
						  <parent ref="EIDaf5b50fc-96a3-49e9-b015-d1400736687b"/>
						  <statementForExecution>not applicable</statementForExecution>
						  <testItemType ref="EIDf483e8e8-06b9-4900-ab36-tnad0d7f22f0"/>
							<testAssertions>
								<TestAssertion id="EIDfb2ed162-a2ef-4881-bb05-e261c2e316ae">
									<label>tn-as.b.1: TrafficFlowDirection can only be associated with a spatial object of the type Link or LinkSequence.</label>
									<description><![CDATA[TrafficFlowDirection can only be associated with a spatial object of the type Link or LinkSequence.<br/><br/>
OCL: "inv: networkRef.element.oclIsKindOf(LinkReference)".<br/><br/>
Verify that an TrafficFlowDirection only has a Network element association with a spatial object TransportLink or TransportLinkSequence.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-tn/3.2/tn-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>]]></description>
									<parent ref="EID6bb73535-1e46-4a58-9cb1-f9d4acc653eb"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $target := ('RoadLink', 'RailwayLink', 'CablewayLink', 'WaterwayLink', 'AirRouteLink', ' ProcedureLink', 'StandardInstrumentDeparture', 'InstrumentApproachProcedure', 'StandardInstrumentArrival', 'RoadLinkSequence', 'RailwayLinkSequence', 'CablewayLinkSequence', 'WaterLinkSequence', 'AirLinkSequence') 
let $hrefs := $features[(self::*:TrafficFlowDirection or self::*:WaterTrafficFlowDirection)]/*:networkRef/*/*:element/@xlink:href
let $messages := local:check-feature-references($hrefs, $target, 'Link or LinkSequence') 
return 
(if ($messages) then 'FAILED' else 'PASSED', 
 $messages) 
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.featuresWithErrors"/>
										<translationTemplate ref="TR.urlNotHttp2"/>
										<translationTemplate ref="TR.idNotFound2"/>
										<translationTemplate ref="TR.resourceNotAccessibleTimeout2"/>
										<translationTemplate ref="TR.resourceNotAccessibleException2"/>
										<translationTemplate ref="TR.resourceNotAccessible2"/>
										<translationTemplate ref="TR.unknownXMLResource2"/>
										<translationTemplate ref="TR.unknownResourceType2"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EIDb7daf317-fad9-4d41-818f-1b43b52cb76a">
									<label>tn-as.b.2: All transport areas have an external object identifier.</label>
									<description><![CDATA[All transport areas have an external object identifier<br/><br/>
OCL: "inv:inspireId->notEmpty()".<br/><br/>
Verify that all TransportArea have an inspireID.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-tn/3.2/tn-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>]]></description>
									<parent ref="EID6bb73535-1e46-4a58-9cb1-f9d4acc653eb"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $featuresWithErrors := $features[(self::*:RoadServiceArea or self::*:RoadArea or self::*:VehicleTrafficArea or self::*:RailwayArea or self::*:RailwayStationArea or self::*:RailwayYardArea or self::*:FairwayArea or self::*:PortArea or self::*:TrafficSeparationSchemeCrossing or self::*:TrafficSeparationSchemeLane or self::*:TrafficSeparationSchemeRoundabout or self::*:TrafficSeparationSchemeSeperator or self::*:AerodromeArea or self::*:AirspaceArea or self::*:ApronArea or self::*:RunwayArea or self::*:TaxiwayArea)[not(@xsi:nil='true') and *:inspireID[(@xsi:nil='true')]]][position() le $limitErrors]
return
(if ($featuresWithErrors) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.featuresWithErrors', count($featuresWithErrors)),
 for $feature in $featuresWithErrors
   order by $feature/@gml:id
   return
     local:addMessage('TR.constraintViolation', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'constraint': 'All transport areas have an external object identifier.'}))
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.constraintViolation"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID2164f7e3-ca11-4958-a11e-c9482c0541d9">
									<label>tn-as.b.3: All transport links have an external object identifier.</label>
									<description><![CDATA[All transport links have an external object identifier.<br/><br/>
OCL: "inv:inspireId->notEmpty()".<br/><br/>
Verify that all TransportLink have an inspireID.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-tn/3.2/tn-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>]]></description>
									<parent ref="EID6bb73535-1e46-4a58-9cb1-f9d4acc653eb"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $featuresWithErrors := $features[(self::*:RoadLink or self::*:RailwayLink or self::*:CablewayLink or self::*:WaterwayLink or self::*:AirRouteLink or self::*: ProcedureLink or self::*:StandardInstrumentDeparture or self::*:InstrumentApproachProcedure or self::*:StandardInstrumentArrival)[not(@xsi:nil='true') and *:inspireID[(@xsi:nil='true')]]][position() le $limitErrors]
return
(if ($featuresWithErrors) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.featuresWithErrors', count($featuresWithErrors)),
 for $feature in $featuresWithErrors
   order by $feature/@gml:id
   return
     local:addMessage('TR.constraintViolation', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'constraint': 'All transport links have an external object identifier.'}))
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.constraintViolation"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EIDe31f1598-98ec-4d1c-9ad8-7abca5a21214">
									<label>tn-as.b.4: All transport link sequences have an external object identifier.</label>
									<description><![CDATA[All transport link sequences have an external object identifier.<br/><br/>
OCL: "inv:inspireId->notEmpty()".<br/><br/>
Verify that all TransportLinkSequence have an inspireID.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-tn/3.2/tn-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>]]></description>
									<parent ref="EID6bb73535-1e46-4a58-9cb1-f9d4acc653eb"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $featuresWithErrors := $features[(self::*:RoadLinkSequence or self::*:RailwayLinkSequence or self::*:CablewayLinkSequence or self::*:WaterLinkSequence or self::*:AirLinkSequence)[not(@xsi:nil='true') and *:inspireID[(@xsi:nil='true')]]][position() le $limitErrors]
return
(if ($featuresWithErrors) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.featuresWithErrors', count($featuresWithErrors)),
 for $feature in $featuresWithErrors
   order by $feature/@gml:id
   return
     local:addMessage('TR.constraintViolation', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'constraint': 'All transport link sequences have an external object identifier.'}))
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.constraintViolation"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID8a716b73-cfef-4bc7-b2a0-496059c55136">
									<label>tn-as.b.5: All transport link sets have an external object identifier.</label>
									<description><![CDATA[All transport link sets have an external object identifier.<br/><br/>
OCL: "inv:inspireId->notEmpty()".<br/><br/>
Verify that all TransportLinkSet have an inspireID.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-tn/3.2/tn-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>]]></description>
									<parent ref="EID6bb73535-1e46-4a58-9cb1-f9d4acc653eb"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $featuresWithErrors := $features[(self::*:Road or self::*:ERoad or self::*:RailwayLine or self::*:CablewayLinkSet or self::*:FerryCrossing or self::*:MarineWaterway or self::*:InlandWaterway or self::*:AirRoute)[not(@xsi:nil='true') and *:inspireID[(@xsi:nil='true')]]][position() le $limitErrors]
return
(if ($featuresWithErrors) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.featuresWithErrors', count($featuresWithErrors)),
 for $feature in $featuresWithErrors
   order by $feature/@gml:id
   return
     local:addMessage('TR.constraintViolation', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'constraint': 'All transport link sets have an external object identifier.'}))
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.constraintViolation"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID6071c2b7-d4d3-4dcc-a3df-5d24e7739816">
									<label>tn-as.b.6: All transport nodes have an external object identifier.</label>
									<description><![CDATA[All transport nodes have an external object identifier.<br/><br/>
OCL: "inv:inspireId->notEmpty()".<br/><br/>
Verify that all TransportNode have an inspireID.<<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-tn/3.2/tn-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>]]></description>
									<parent ref="EID6bb73535-1e46-4a58-9cb1-f9d4acc653eb"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $featuresWithErrors := $features[(self::*:RoadNode or self::*:RailwayNode or self::*:RailwayYardNode or self::*:RailwayStationNode or self::*:CablewayNode or self::*:WaterwayNode or self::*:PortNode or self::*:Navaid or self::*:DesignatedPoint or self::*:RunwayCentrelinePoint or self::*:TouchDownLiftOff or self::*:AerodromeNode)[not(@xsi:nil='true') and *:inspireID[(@xsi:nil='true')]]][position() le $limitErrors]
return
(if ($featuresWithErrors) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.featuresWithErrors', count($featuresWithErrors)),
 for $feature in $featuresWithErrors
   order by $feature/@gml:id
   return
     local:addMessage('TR.constraintViolation', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'constraint': 'All transport nodes have an external object identifier.'}))
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.constraintViolation"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID89792a2f-f3b7-4008-a1c6-eedfc6909bfc">
									<label>tn-as.b.7: All transport points have an external object identifier.</label>
									<description><![CDATA[All transport points have an external object identifier.<br/><br/>
OCL: "inv:inspireId->notEmpty()".<br/><br/>
Verify that all TransportPoint have an inspireID.<<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-tn/3.2/tn-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>]]></description>
									<parent ref="EID6bb73535-1e46-4a58-9cb1-f9d4acc653eb"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $featuresWithErrors := $features[(self::*:MarkerPost or self::*:Buoy or self::*:Beacon)[not(@xsi:nil='true') and *:inspireID[(@xsi:nil='true')]]][position() le $limitErrors]
return
(if ($featuresWithErrors) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.featuresWithErrors', count($featuresWithErrors)),
 for $feature in $featuresWithErrors
   order by $feature/@gml:id
   return
     local:addMessage('TR.constraintViolation', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'constraint': 'All transport points have an external object identifier.'}))
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.constraintViolation"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EIDe4cb76d6-b8a6-4d90-ae4f-f2bed0ae26ad">
									<label>tn-as.b.8: All transport properties have an external object identifier.</label>
									<description><![CDATA[All transport properties have an external object identifier.<br/><br/>
OCL: "inv:inspireId->notEmpty()".<br/><br/>
Verify that all TransportProperty have an inspireID.<<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-tn/3.2/tn-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>]]></description>
									<parent ref="EID6bb73535-1e46-4a58-9cb1-f9d4acc653eb"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $featuresWithErrors := $features[(self::*:MaintenanceAuthority or self::*:OwnerAuthority or self::*:VerticalPosition or self::*:TrafficFlowDirection or self::*:ConditionOfFacility or self::*:RestrictionForVehicles or self::*:AccessRestriction or self::*:FunctionalRoadClass or self::*:RoadSurfaceCategory or self::*:RoadServiceType or self::*:RoadName or self::*:NumberOfLanes or self::*:SpeedLimit or self::*:RoadWidth or self::*:FormOfWay or self::*:NominalTrackGauge or self::*:RailwayElectrification or self::*:RailwayType or self::*:NumberOfTracks or self::*:DesignSpeed or self::*:RailwayUse or self::*:RailwayStationCode or self::*:FerryUse or self::*:CEMTClass or self::*:RestrictionForWaterVehicles or self::*:WaterTrafficFlowDirection or self::*:ConditionOfWaterFacility or self::*:UpperAltitudeLimit or self::*:FieldElevation or self::*:LowerAltitudeLimit or self::*:AerodromeType or self::*:SurfaceComposition or self::*:useRestriction or self::*:ElementLength or self::*:ElementWidth or self::*:AerodromeCategory or self::*:ConditionOfAirFacility)[not(@xsi:nil='true') and *:inspireID[(@xsi:nil='true')]]][position() le $limitErrors]
return
(if ($featuresWithErrors) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.featuresWithErrors', count($featuresWithErrors)),
 for $feature in $featuresWithErrors
   order by $feature/@gml:id
   return
     local:addMessage('TR.constraintViolation', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'constraint': 'All transport properties have an external object identifier.'}))
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.constraintViolation"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EID8e5faabd-a733-4600-b519-18e53af211f4">
									<label>tn-as.b.9: A transport link sequence must be composed of transport links that all belong to the same transport network.</label>
									<description><![CDATA[A transport link sequence must be composed of transport links that all belong to the same transport network.<br/><br/>
OCL: "inv: link->forAll(l | l.link.inNetwork = self.inNetwork)".<br/><br/>
Verify that all TransportLinkSequence are composed of all link that have the same value for the inNetwork association role as the TransportLinkSequence.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-tn/3.2/tn-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>]]></description>
									<parent ref="EID6bb73535-1e46-4a58-9cb1-f9d4acc653eb"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $featuresWithErrors := $features[(self:*:RoadLinkSequence or self:*:RailwayLinkSequence or self:*:CablewayLinkSequence or self:*:WaterLinkSequence or self:*:AirLinkSequence)[not(@xsi:nil='true') and *:link[*:inNetwork/@xlink:href != *:inNetwork/@xlink:href]]][position() le $limitErrors]
return
(if ($featuresWithErrors) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.featuresWithErrors', count($featuresWithErrors)),
 for $feature in $featuresWithErrors
   order by $feature/@gml:id
   return
     local:addMessage('TR.constraintViolation', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'constraint': 'A transport link sequence must be composed of transport links that all belong to the same transport network.'}))

									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.constraintViolation"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
								</TestAssertion>
								<TestAssertion id="EIDf56cfea3-56e6-4afd-b136-2fe78faacec1">
									<label>tn-as.b.10: A transport link set must be composed of transport links and or transport link sequences that all belong to the same transport network.</label>
									<description><![CDATA[A transport link set must be composed of transport links and or transport link sequences that all belong to the same transport network.<br/><br/>
OCL: "inv: link->forAll(l | l.inNetwork = self.inNetwork)".<br/><br/>
Verify that all TransportLinkSet are composed of all link that have the same value for the inNetwork association role as the TransportLinkSet.<br/><br/>
Relevant requirements:
<ul>
<li>IR Requirement Article 4 (2): Types for the Exchange and Classification of Spatial Objects. Spatial object types and data types shall comply with the definitions and constraints and include the attributes and association roles set out in the Annexes.</li>
</ul>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-tn/3.2/tn-as/constraints" target="_blank">Abstract Test Case 'Constraints'</a>]]></description>
									<parent ref="EID6bb73535-1e46-4a58-9cb1-f9d4acc653eb"/>
									<expectedResult>NOT_APPLICABLE</expectedResult>
									<expression>
let $featuresWithErrors := $features[(self::*:Road or self::*:ERoad or self::*:RailwayLine or self::*:CablewayLinkSet or self::*:FerryCrossing or self::*:MarineWaterway or self::*:InlandWaterway or self::*:AirRoute)[not(@xsi:nil='true') and *:link[*:inNetwork/@xlink:href != *:inNetwork/@xlink:href]]][position() le $limitErrors]
return
(if ($featuresWithErrors) then 'FAILED' else 'PASSED',
 local:error-statistics('TR.featuresWithErrors', count($featuresWithErrors)),
 for $feature in $featuresWithErrors
   order by $feature/@gml:id
   return
     local:addMessage('TR.constraintViolation', map { 'filename': local:filename($feature), 'featureType': local-name($feature), 'gmlid': string($feature/@gml:id), 'constraint': 'A transport link set must be composed of transport links and or transport link sequences that all belong to the same transport network.'}))
									</expression>
									<testItemType ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
									<translationTemplates>
										<translationTemplate ref="TR.constraintViolation"/>
										<translationTemplate ref="TR.featuresWithErrors"/>
									</translationTemplates>
								</TestAssertion>
							</testAssertions>
						</TestStep>
					</testSteps>
				</TestCase>
			</testCases>
		</TestModule>
	</testModules>
</ExecutableTestSuite>
