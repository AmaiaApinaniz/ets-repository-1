<ExecutableTestSuite id="EID81b070d3-b17f-430b-abee-456268346912" xmlns="http://www.interactive-instruments.de/etf/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.interactive-instruments.de/etf/1.0 ../../schema/model/test.xsd">
	<label>GML application schemas, Hydrography</label>
	<description><![CDATA[This test suite examines the GML encoding of spatial objects specified in the INSPIRE GML application schemas 'Hydrography - Network' and 'Hydrography - Physical Waters'. Both currently approved GML application schema versions (3.0 and 4.0) are tested.<br/><br/>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-hy/3.1/hy-gml">Conformance Class 'GML application schemas, Hydrography'</a>]]></description>
	<version>0.1.0</version>
	<author>interactive instruments GmbH</author>
	<creationDate>2016-08-15T00:00:00Z</creationDate>
	<lastEditor>interactive instruments GmbH</lastEditor>
	<lastUpdateDate>2016-08-15T00:00:00Z</lastUpdateDate>
	<remoteResource>http://github.com/inspire-eu-validation/ets-repository/data-hy/hy-gml</remoteResource>
	<translationTemplateBundle ref="EID70a263c0-0ad7-42f2-9d4d-0d8a4ca71b52"/>
	<StatisticalReportTableType xmlns="http://www.interactive-instruments.de/etf/1.0" id="EID8bb8f162-1082-434f-bd06-23d6507634b8">
		<label>Feature Type Statistics</label>
		<description>The number of features per feature type and file in the dataset.</description>
		<version>0.1.0</version>
		<author>interactive instruments GmbH</author>
		<creationDate>2016-08-15T00:00:00Z</creationDate>
		<lastEditor>interactive instruments GmbH</lastEditor>
		<lastUpdateDate>2016-08-15T00:00:00Z</lastUpdateDate>
		<columnHeaderLabels>
			<label>Filename</label>
			<label>Feature Type</label>
			<label>Feature Count</label>
		</columnHeaderLabels>
		<rowExpressions>
			<expression>'all; all; ' || count($features)</expression>
			<expression>
for $feature in $features 
	let $ft := $feature/local-name()
	group by $ft 
	order by $ft
	return 'all; ' || $ft || '; ' || count($feature)
			</expression>
			<expression>
if (count($db)&lt;=1) then () else
for $file in $db
	let $filename := local:filename($file)
	order by $filename
	return
		for $feature in $features[local:filename(.)=$filename]
			let $ft := $feature/local-name()
			group by $ft 
			order by $ft
			return $filename || '; ' || $ft || '; ' || count($feature)
			</expression>
		</rowExpressions>
	</StatisticalReportTableType>
	<ParameterList name="ETF Standard Parameters for XML test objects">
		<parameter name="files_to_test" required="true">
			<defaultValue>.*</defaultValue>
			<description ref="filesToTest"/>
			<allowedValues>.*</allowedValues>
			<type>string</type>
		</parameter>
		<parameter name="tests_to_execute" required="false">
			<defaultValue>.*</defaultValue>
			<description ref="testsToExecute"/>
			<allowedValues>.*</allowedValues>
			<type>string</type>
		</parameter>
		<parameter name="maximum_number_of_error_messages_per_test" required="false">
			<defaultValue>100</defaultValue>
			<description ref="limitMessages"/>
			<allowedValues>[1-9]+[0-9]*</allowedValues>
			<type>integer</type>
		</parameter>
	</ParameterList>
	<supportedTestObjectTypes>
	  <testObjectType ref="EIDe1d4a306-7a78-4a3b-ae2d-cf5f0810853e"/>
	</supportedTestObjectTypes>
	<Dependencies>
		<dependency>
			<dependsOn ref="EID09820daf-62b2-4fa3-a95f-56a0d2b7c4d8"/>
		</dependency>
	</Dependencies>
	<testModules>
	  <TestModule id="EIDba99fda3-5438-4c84-9638-64f5a9f8e896">
		 <parent ref="EID81b070d3-b17f-430b-abee-456268346912"/>
		 <label>IGNORE</label>
		 <description>IGNORE</description>
		 <testCases>
			<TestCase id="EIDbaf1ccb7-c115-463b-a8d3-f74689654a7d">
			  <parent ref="EIDba99fda3-5438-4c84-9638-64f5a9f8e896"/>
			  <label>Basic test</label>
			  <description>Verify that the spatial data set contains at least one Hydrographic feature.</description>
			  <testSteps>
				<TestStep id="EID8300e1a1-52f6-4ccc-a5f8-dbbe4bb44768">
					<parent ref="EIDbaf1ccb7-c115-463b-a8d3-f74689654a7d"/>
					<label>IGNORE</label>
					<description>IGNORE</description>
					<statementForExecution>not applicable</statementForExecution>
					<type ref="EIDf483e8e8-06b9-4900-ab36-adad0d7f22f0"/>
					<testAssertions>
					  <TestAssertion id="EID816a1bd6-07ca-448c-9bc7-4c1846f18b12">
						 <parent ref="EID8300e1a1-52f6-4ccc-a5f8-dbbe4bb44768"/>
						 <label>a.1: Hydrographic feature in dataset</label>
						 <description><![CDATA[Check that the set of features in the spatial data set is not empty.<br/><br/>
Source: <a href="http://inspire.ec.europa.eu/id/ats/data-hy/3.1/hy-gml/basic">Abstract Test Case 'Basic test'</a>]]></description>
						 <expectedResult/>
						 <expression>
(: TODO: extend with subtypes :)
let $featuresFromAppSchema := $features[self::*:HydroNode | self::*:WatercourseLink | self::*:WatercourseLinkSequence | self::*:WatercourseSeparatedCrossing | self::*:Watercourse | self::*:StandingWater | self::*:Wetland | self::*:GlacierSnowfield | self::*:Shore | self::*:DrainageBasin | self::*:RiverBasin | self::*:LandWaterBoundary | self::*:Embankment | self::*:Ford | self::*:Lock | self::*:Sluice | self::*:DamOrWeir | self::*:ShorelineConstruction | self::*:Crossing | self::*:SpringOrSeep | self::*:VanishingPoint | self::*:Rapids | self::*:Falls]
return 
 (if ($featuresFromAppSchema) then 'PASSED' else 'FAILED',
  if (not($featuresFromAppSchema)) then local:addMessage('noFeature', map { 'theme': 'Hydrography' }) else ())
                   </expression>
						 <type ref="EIDf0edc596-49d2-48d6-a1a1-1ac581dcde0a"/>
						 <translationTemplates>
							<translationTemplate ref="noFeature"/>
						 </translationTemplates>
					  </TestAssertion>
					</testAssertions>
				 </TestStep>
			  </testSteps>
			</TestCase>
		 </testCases>
	  </TestModule>
	</testModules>
</ExecutableTestSuite>