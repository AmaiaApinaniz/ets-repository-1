<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="eec9d674-d94b-4d8d-b744-1309c6cae1d2" activeEnvironment="Default" name="Conformance Class: View Service - WMS" resourceRoot="${projectDir}" soapui-version="5.4.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:description>Test that a service conforms with WMS</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="Export JUnit Results" value="false"/>
  <con:entry key="Export All" value="false"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="TestSuite" value="GetCapabilities_Operation"/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="Select Report Type" value=""/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Export JUnit Results with test properties" value="false"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="TestCase" value="at11-getcapabilities-resource-type-is-service"/>
  <con:entry key="Username" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="Root Folder" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Save Project" value="false"/>
</xml-fragment>]]></con:setting></con:settings><con:testSuite id="a5986848-3e54-4648-b8d4-09ada35a460f" name="GetCapabilities_Operation"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="f7184e7c-7a86-4cf5-8b19-1f4431cc81f5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="initial-testcase" searchProperties="true"><con:settings/><con:testStep type="groovy" name="reset-properties" id="f3e7710e-de55-4d55-9279-801c70e7554b"><con:settings/><con:config><script>testRunner.testCase.testSuite.project.setPropertyValue( 'extended_capabilities_scenario', '' );
testRunner.testCase.testSuite.project.setPropertyValue( 'lastServiceEndpoint', '');</script></con:config></con:testStep><con:testStep type="httprequest" name="http-request" id="57d85050-3859-433d-a242-15b9c47e35d5"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="e3a4c9b4-ff53-4b3a-a62d-908b2de3aa7f" name="http-request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#serviceEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="a3a3f4d9-6cec-439c-87dd-fc3d74d56270" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>request</con:name><con:value>GetCapabilities</con:value><con:style>QUERY</con:style><con:default>GetCapabilities</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>service</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style><con:default>${#Project#service}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>version</con:name><con:value>${#Project#version}</con:value><con:style>QUERY</con:style><con:default>${#Project#version}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="groovy" name="set-extended-capabilities-scenario" id="e968301b-09cb-40f5-a278-e0c8a7adf202"><con:settings/><con:config><script>def response = context.expand('${http-request#Response}');
def capabilities = new XmlSlurper().parseText(response);
def scenario = '1';
testRunner.testCase.testSuite.project.setPropertyValue( "extended_capabilities_scenario", scenario );
if(capabilities.Capability.ExtendedCapabilities.ResourceLocator.size() == 1 ||
   capabilities.Capability.ExtendedCapabilities.ResourceType.size() == 1 ||
   capabilities.Capability.ExtendedCapabilities.TemporalReference.size() == 1 ||
   capabilities.Capability.ExtendedCapabilities.Conformity.size() == 1 ||
   capabilities.Capability.ExtendedCapabilities.MetadataPointOfContact.size() == 1 ||
   capabilities.Capability.ExtendedCapabilities.MetadataDate.size() == 1 ||
   capabilities.Capability.ExtendedCapabilities.SpatialDataServiceType.size() == 1 ||
   capabilities.Capability.ExtendedCapabilities.MandatoryKeyword.size() == 1 ||
   capabilities.Capability.ExtendedCapabilities.Keyword.size() == 1){
	scenario = '2';
	testRunner.testCase.testSuite.project.setPropertyValue( "extended_capabilities_scenario", scenario );
}
log.info('Extended Capabilities Scenario: ' + scenario);</script></con:config></con:testStep><con:testStep type="groovy" name="set-lastserviceendpoint" id="b34c2e7e-3d7d-401e-8a5e-f1a7d7e1ad6f"><con:settings/><con:config><script>def lastServiceEndpoint = context.expand('${http-request#EndPoint}');
testRunner.testCase.testSuite.project.setPropertyValue( 'lastServiceEndpoint', lastServiceEndpoint);</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="452f3b7c-9db1-47c7-9621-6f76b761feea" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="check-initial-testcase" searchProperties="true"><con:settings/><con:testStep type="groovy" name="run-initial-testcase-if-needed" id="bb0e3025-748d-436e-8910-7b4db9452988"><con:settings/><con:config><script>def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def serviceEndPoint = testRunner.testCase.testSuite.project.getPropertyValue( 'serviceEndpoint');
def lastServiceEndPoint = testRunner.testCase.testSuite.project.getPropertyValue( 'lastServiceEndpoint');
def makeInitialRequest = false;
if (tc.getTestStepByName("http-request").getPropertyValue("Response") == null){
	makeInitialRequest = true;
}
else if(serviceEndPoint != lastServiceEndPoint){
	makeInitialRequest = true;
}
if(makeInitialRequest){
	runner = tc.run(new com.eviware.soapui.support.types.StringToObjectMap(), false);
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="55bd534f-a980-4a52-9361-200a3721ba6a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at04-getcapabilities-xml-schema-validation" searchProperties="true"><con:settings/><con:testStep type="httprequest" name="http-request" id="a8b44c42-5017-44f3-a6fa-e8383d8e2f80"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="382c4536-bd30-4137-bda3-b91ca47c16aa" name="http-request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#serviceEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="bac62d79-8559-4976-a077-bee748b0a960" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Schema Validator" id="74c8489f-db4f-427d-a5cc-b83f69560f12" name="Simple Schema Validator"><con:configuration><pathToXSD>http://inspire.ec.europa.eu/schemas/inspire_vs/1.0/inspire_vs.xsd</pathToXSD></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>request</con:name><con:value>GetCapabilities</con:value><con:style>QUERY</con:style><con:default>GetCapabilities</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>service</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style><con:default>${#Project#service}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>version</con:name><con:value>${#Project#version}</con:value><con:style>QUERY</con:style><con:default>${#Project#version}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="8d0ee3be-3c0e-498e-85f3-12c6ac5f6c74" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at05-getcapabilities-get-capabilities-request-parameter" searchProperties="true"><con:settings/><con:testStep type="httprequest" name="http-request-no-version-parameter" id="0464c1ae-35e1-400a-8520-7fc8fc8cbfb8"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="ac2b09f1-5524-4961-8dcb-9b067b6e344b" name="http-request-no-version-parameter" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#serviceEndpoint}</con:endpoint><con:request/><con:assertion type="OwsExceptionReportAssertion" id="a69251b9-4c2a-49d8-8df2-47dbc677cd95" name="Fail if service returns OWS Exception Report"/><con:assertion type="Valid HTTP Status Codes" id="1119cddd-330f-4baf-93dc-aafa0ecda0e8" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>request</con:name><con:value>GetCapabilities</con:value><con:style>QUERY</con:style><con:default>GetCapabilities</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>service</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style><con:default>${#Project#service}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="http-request-no-request-parameter" id="5b84db86-491e-4916-8357-75bc56d5a598"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="4265cdbe-c701-401f-9e0c-f8ba699f32ab" name="http-request-no-request-parameter" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#serviceEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="41518e13-ee13-41f4-ae8b-a2fb1058707c" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="642c5459-3b94-46b8-aaa5-adf76123c644" name="Fail if service does not return OWS Exception Report"><con:configuration><scriptText>def xml_root = new XmlSlurper().parseText(messageExchange.response.responseContent);
assert (xml_root.ServiceException.size() == 1 || xml_root.Exception.size() == 1);</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>service</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style><con:default>${#Project#service}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>version</con:name><con:value>${#Project#version}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="http-request-wrong-request-parameter" id="6a46cb67-4cbd-4d68-85e2-1533fa54bbe5"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="60c73c99-41cc-4902-8f8b-c7c3ba83f90f" name="http-request-wrong-request-parameter" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#serviceEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="0541754a-dc44-4f02-a141-e3b2b408e23a" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="be70e6f8-f0c7-414f-ae7f-0074b240ad27" name="Fail if service does not return OWS Exception Report"><con:configuration><scriptText>def xml_root = new XmlSlurper().parseText(messageExchange.response.responseContent);
assert (xml_root.ServiceException.size() == 1 || xml_root.Exception.size() == 1);</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>request</con:name><con:value>zzzz</con:value><con:style>QUERY</con:style><con:default>zzzz</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>service</con:name><con:value>${#Project#service}</con:value><con:style>QUERY</con:style><con:default>${#Project#service}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>version</con:name><con:value>${#Project#version}</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="http-request-no-service-parameter" id="8806d055-8dae-4f39-bca5-6bf521c48fd2"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="9a5785cc-24ed-40b0-8f0d-3a86b0204a26" name="http-request-no-service-parameter" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#serviceEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="c4a8dfd6-8d5b-457b-89e9-e3e7873db948" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="4ff083af-55d3-49be-8a7b-3337c90e2a29" name="Fail if service does not return OWS Exception Report"><con:configuration><scriptText>def xml_root = new XmlSlurper().parseText(messageExchange.response.responseContent);
assert (xml_root.ServiceException.size() == 1 || xml_root.Exception.size() == 1);</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>request</con:name><con:value>GetCapabilities</con:value><con:style>QUERY</con:style><con:default>GetCapabilities</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>version</con:name><con:value>${#Project#version}</con:value><con:style>QUERY</con:style><con:default>${#Project#version}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="http-request-wrong-service-parameter" id="cdd2b00a-ec48-49c8-b07a-cbe98b8268b3"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="85de5ad4-45cd-4c28-93d9-5601521daf3f" name="http-request-wrong-service-parameter" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#serviceEndpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" id="90938d28-73ea-4044-99b8-05dc71ed75e9" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="cf1483e2-3d9c-4724-8886-1bbcfea2ff8a" name="Fail if service does not return OWS Exception Report"><con:configuration><scriptText>def xml_root = new XmlSlurper().parseText(messageExchange.response.responseContent);
assert (xml_root.ServiceException.size() == 1 || xml_root.Exception.size() == 1);</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>request</con:name><con:value>GetCapabilities</con:value><con:style>QUERY</con:style><con:default>GetCapabilities</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>service</con:name><con:value>zzzz</con:value><con:style>QUERY</con:style><con:default>zzzz</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>version</con:name><con:value>${#Project#version}</con:value><con:style>QUERY</con:style><con:default>${#Project#version}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="0c04daed-7a46-4957-bc7e-0a22cc029ed2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at08-getcapabilities-language-section-in-extended-capabilities" searchProperties="true"><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="7b7a635b-0c8b-4788-924f-c0c6bcaea8d2"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-language-section" id="349ba037-a637-43c8-a5c7-9f1b98dbefdd"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);
def scenario = testRunner.testCase.testSuite.project.getPropertyValue("extended_capabilities_scenario");

if(capabilities.Capability.ExtendedCapabilities.SupportedLanguages.size() != 1){
	throw new TranslatableAssertionError("TR.multiplicityShallBeOne");
}
else if(capabilities.Capability.ExtendedCapabilities.SupportedLanguages.toString().length() == 0){
	throw new TranslatableAssertionError("TR.valueShallNotBeEmpty");
}
if(capabilities.Capability.ExtendedCapabilities.ResponseLanguage.size() != 1){
	throw new TranslatableAssertionError("TR.multiplicityShallBeOne");
}
else if(capabilities.Capability.ExtendedCapabilities.ResponseLanguage.toString().length() == 0){
	throw new TranslatableAssertionError("TR.valueShallNotBeEmpty");
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="c3591f4d-025e-437a-829e-b92a2acf9c30" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at09-getcapabilities-view-service-metadata-in-dicovery-service" searchProperties="true"><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="a6a3c5c1-c9b8-4097-8000-cde984f01515"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-metadataurl" id="3370ba6f-c044-448e-8c44-062716fd346c"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);
def scenario = testRunner.testCase.testSuite.project.getPropertyValue("extended_capabilities_scenario");

tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["at09-getcapabilities-view-service-metadata-in-dicovery-service"];
testRunner.testCase.setPropertyValue("metadataEndpoint", '');

def metadataEndpoint = capabilities.Capability.ExtendedCapabilities.MetadataUrl.URL;
if (scenario == '1' &amp;&amp; metadataEndpoint.size() != 1){
	throw new TranslatableAssertionError("TR.multiplicityShallBeOne");
}
else if(scenario == '1' &amp;&amp; metadataEndpoint.toString().length() == 0){
	throw new TranslatableAssertionError("TR.valueShallNotBeEmpty");
}
else if(metadataEndpoint.toString().length() != 0){
	testRunner.testCase.setPropertyValue("metadataEndpoint", metadataEndpoint.toString());
	tc.getTestStepByName('http-request-metadata').setDisabled(false);
}
else{
	tc.getTestStepByName('http-request-metadata').setDisabled(true);
}</script></con:config></con:testStep><con:testStep type="httprequest" name="http-request-metadata" id="021f8877-3876-496f-a9bc-0b1949fec174" disabled="true"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="47dc0752-c129-4a53-b542-13425d14e699" name="http-request-metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestCase#metadataEndpoint}</con:endpoint><con:request/><con:assertion type="OwsExceptionReportAssertion" id="fcb50add-affc-4bb9-923d-8171ae970fe3" name="Fail if service returns OWS Exception Report"/><con:assertion type="Valid HTTP Status Codes" id="66a813f3-0e2d-41de-a6fe-c0e3b596a79b" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties><con:property><con:name>metadataEndpoint</con:name><con:value/></con:property></con:properties></con:testCase><con:testCase id="ec968506-6760-47db-bb01-9fa4b9aca10b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at10-getcapabilities-title-and-abstract" searchProperties="true"><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="14da54c3-89da-49b8-a52c-bce8f56a36be"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-title-abstract-accessconstraints" id="e3989ad7-9c7c-4762-8419-9f8512a2922d"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);
def scenario = testRunner.testCase.testSuite.project.getPropertyValue("extended_capabilities_scenario");

if(capabilities.Service.Title.size() != 1){
	throw new TranslatableAssertionError("TR.multiplicityShallBeOne");
}
else if(capabilities.Service.Title.toString().length() == 0){
	throw new TranslatableAssertionError("TR.valueShallNotBeEmpty");
}
if(capabilities.Service.Abstract.size() != 1){
	throw new TranslatableAssertionError("TR.multiplicityShallBeOne");
}
else if(capabilities.Service.Abstract.toString().length() == 0){
	throw new TranslatableAssertionError("TR.valueShallNotBeEmpty");
}
if(capabilities.Service.AccessConstraints.size() == 0){
	throw new TranslatableAssertionError("TR.multiplicityShallBeOneOrMore");
}
else if(capabilities.Service.AccessConstraints.toString().length() == 0){
	throw new TranslatableAssertionError("TR.valueShallNotBeEmpty");
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d1fe6d21-4061-4efd-a627-cfa91cab5846" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at11-getcapabilities-resource-type-is-service" searchProperties="true"><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="7bb4b8d6-e6f5-4165-806e-38bb9bfa24dc"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-resource-type" id="d02b1884-59ed-4be7-bfbc-ebb709b2a83d"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);
def scenario = testRunner.testCase.testSuite.project.getPropertyValue("extended_capabilities_scenario");

if(scenario == '2'){
	def resourceType = capabilities.Capability.ExtendedCapabilities.ResourceType;
	if(resourceType.size() != 1){
		throw new TranslatableAssertionError("TR.multiplicityShallBeOne");
	}
	else if(resourceType.toString().length() == 0){
		throw new TranslatableAssertionError("TR.valueShallNotBeEmpty");
	}
	else if(resourceType != 'service'){
		throw new TranslatableAssertionError("TR.valueShallNotBeEmpty");
	}
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="97c30e58-255e-4b70-9c55-6cf310666dd7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at12-getcapabilities-resource-locator" searchProperties="true"><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="b2b8447f-2a2c-4d57-8194-0f4f5ce17855"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-resource-locator" id="d29f39cc-85d6-4d5d-8e75-251f1eb04da3"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);
def scenario = testRunner.testCase.testSuite.project.getPropertyValue("extended_capabilities_scenario");

if(scenario == '2'){
	def resourceLocator = capabilities.Capability.ExtendedCapabilities.ResourceLocator;
	if(resourceLocator.size() == 0){
		throw new TranslatableAssertionError("TR.multiplicityShallBeOneOrMore");
	}
	else if(resourceLocator.toString().length() == 0){
		throw new TranslatableAssertionError("TR.valueShallNotBeEmpty");
	}
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="7887cf75-a7c9-4e9d-98b4-bdfc993153a0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at14-getcapabilities-map-coupled-resource-metadata-url" searchProperties="true"><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="1b2b8893-2b6f-46d3-b4dc-84189e50a663"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-coupled-resource" id="6f967a15-cc2f-4fbb-8e2a-91e13189a312"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

def layers = capabilities.Capability.depthFirst().findAll{it.name()=='Layer' &amp;&amp; it.MetadataURL.size() != 0};
layers.each{ Layer ->
	if(Layer.MetadataURL.OnlineResource.size() == 0){
		throw new TranslatableAssertionError("TR.valueShallNotBeEmpty");
	}
	else if(Layer.MetadataURL.OnlineResource.'@xlink:href'.toString().length() == 0){
		throw new TranslatableAssertionError("TR.onlineResourceLink");
	}
}
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="11accc35-5947-4cf1-982e-acd4c41fb35b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at15-getcapabilities-map-sds-type-with-extendedcapabilities" searchProperties="true"><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="230f5b22-ae91-499f-b6c1-4fc477e97f47"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-sds-type" id="759c9534-c611-476f-9614-859bf60af037"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);
def scenario = testRunner.testCase.testSuite.project.getPropertyValue("extended_capabilities_scenario");

if(scenario == '2'){
	def spatialDataServiceType = capabilities.Capability.ExtendedCapabilities.SpatialDataServiceType;
	if(spatialDataServiceType.size() == 0){
		throw new TranslatableAssertionError("TR.multiplicityShallBeOne");
	}
	else if(spatialDataServiceType.toString().length() == 0){
		throw new TranslatableAssertionError("TR.valueShallNotBeEmpty");
	}
	else if(spatialDataServiceType.toString() != 'view'){
		throw new TranslatableAssertionError("TR.invalidSpatialDataServiceType");
	}
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="9ff20c0a-df73-402e-8ac1-4d166a3d3336" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at16-getcapabilities-keyword-node" searchProperties="true"><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="cafe2a50-442c-410c-abc6-aac6c5ee1990"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-keyword" id="850d6fd7-70d4-44a6-a938-f485b77abdad"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);
def classificationSDS = ['humanInteractionService', 'humanCatalogueViewer', 'humanGeographicViewer', 'humanGeographicSpreadsheetViewer', 'humanServiceEditor', 'humanChainDefinitionEditor', 'humanWorkflowEnactmentManager', 'humanGeographicFeatureEditor', 'humanGeographicSymbolEditor', 'humanFeatureGeneralizationEditor', 'humanGeographicDataStructureViewer', 'infoManagementService', 'infoFeatureAccessService', 'infoMapAccessService', 'infoCoverageAccessService', 'infoSensorDescriptionService', 'infoProductAccessService', 'infoFeatureTypeService', 'infoCatalogueService', 'infoRegistryService', 'infoGazetteerService', 'infoOrderHandlingService', 'infoStandingOrderService', 'taskManagementService', 'chainDefinitionService', 'workflowEnactmentService', 'subscriptionService', 'spatialProcessingService', 'spatialCoordinateConversionService', 'spatialCoordinateTransformationService', 'spatialCoverageVectorConversionService', 'spatialImageCoordinateConversionService', 'spatialRectificationService', 'spatialOrthorectificationService', 'spatialSensorGeometryModelAdjustmentService', 'spatialImageGeometryModelConversionService', 'spatialSubsettingService', 'spatialSamplingService', 'spatialTilingChangeService', 'spatialDimensionMeasurementService', 'spatialFeatureManipulationService', 'spatialFeatureMatchingService', 'spatialFeatureGeneralizationService', 'spatialRouteDeterminationService', 'spatialPositioningService', 'spatialProximityAnalysisService', 'thematicProcessingService', 'thematicGoparameterCalculationService', 'thematicClassificationService', 'thematicFeatureGeneralizationService', 'thematicSubsettingService', 'thematicSpatialCountingService', 'thematicChangeDetectionService', 'thematicGeographicInformationExtractionService', 'thematicImageProcessingService', 'thematicReducedResolutionGenerationService', 'thematicImageManipulationService', 'thematicImageUnderstandingService', 'thematicImageSynthesisService', 'thematicMultibandImageManipulationService', 'thematicObjectDetectionService', 'thematicGeoparsingService', 'thematicGeocodingService', 'temporalProcessingService', 'temporalReferenceSystemTransformationService', 'temporalSubsettingService', 'temporalSamplingService', 'temporalProximityAnalysisService', 'metadataProcessingService', 'metadataStatisticalCalculationService', 'metadataGeographicAnnotationService', 'comService', 'comEncodingService', 'comTransferService', 'comGeographicCompressionService', 'comGeographicFormatConversionService', 'comMessagingService', 'comRemoteFileAndExecutableManagement'];

def keywords = capabilities.Service.depthFirst().findAll{it.name() == 'Keyword'};
def keywordInclassification = false;
keywords.each{keyword ->
	if(keyword in classificationSDS){
		keywordInclassification = true;
	}
}
if(!keywordInclassification){
	throw new TranslatableAssertionError("TR.atLeastOneKeywordInClassification");
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="186d16f6-d9e7-4e07-a1f9-0f3759e2e883" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at17-getcapabilities-keyword-list" searchProperties="true"><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="3ef728d9-d606-40f8-b0e1-0ad47ceb72a7"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-keyword-list" id="3d7db4fb-d6d7-4116-90c0-b644e99df7bc"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

def keywords = capabilities.Service.depthFirst().findAll{it.name() == 'Keyword'};
def keywordListChilds = capabilities.Service.KeywordList.depthFirst().findAll{it.name() == 'Keyword'};

if(keywords.size() > 1){
	if(capabilities.Service.KeywordList.size() != 1){
		throw new TranslatableAssertionError("TR.multiplicityShallBeOne");
	}
	else if(keywords.size() != keywordListChilds.size()){
		throw new TranslatableAssertionError("TR.keywordsInKeywordList");
	}
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d1c55361-6317-48a7-9bb6-b6fefe721317" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at18-getcapabilities-keyword-in-extendedcapabilities" searchProperties="true"><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="e0819518-490a-45d8-9158-197321b149fc"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-keyword-extendedcapabilities" id="e34b6ecb-b893-4756-a706-19d83cf014d0"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);
def scenario = testRunner.testCase.testSuite.project.getPropertyValue("extended_capabilities_scenario");

if(scenario == '2'){
	def keywordsExtended = capabilities.Capability.ExtendedCapabilities.Keyword;
	def keywordsMandatory = capabilities.Capability.ExtendedCapabilities.MandatoryKeyword;

	if(keywordsMandatory.size() == 0){
		throw new TranslatableAssertionError("TR.multiplicityShallBeOneOrMore");
	}
	if(keywordsMandatory.toString().length() == 0){
		throw new TranslatableAssertionError("TR.valueShallNotBeEmpty");
	}
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="ac1256e4-4f73-4205-8f81-759c177df734" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at19-getcapabilities-geographic-boundingbox" searchProperties="true"><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="4a797b0d-56d3-47cd-84ad-9009a52a95da"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-geographic-boundingbox" id="3a31614c-ea67-42c0-ae0a-f530bf3dffcf"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

def layers = capabilities.Capability.depthFirst().findAll{it.name()=='Layer'};
layers.each{ layer ->
	if(layer.EX_GeographicBoundingBox.size() != 1){
		throw new TranslatableAssertionError("TR.multiplicityShallBeOne");
	}
	if(layer.EX_GeographicBoundingBox.toString().length() == 0){
		throw new TranslatableAssertionError("TR.valueShallNotBeEmpty");
	}
};</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="7c8dc932-8550-4120-8649-2c0d349c9db6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at20-getcapabilities-date-type" searchProperties="true"><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="eee91f0c-c780-4313-9d16-581bf306364f"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-date-extended" id="d86bd9a3-b126-453e-8b91-416c2a6d5db5"><con:settings/><con:config><script><![CDATA[import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);
def scenario = testRunner.testCase.testSuite.project.getPropertyValue("extended_capabilities_scenario");

if(scenario == '2'){
	def temporalReferences = capabilities.Capability.ExtendedCapabilities.TemporalReference;
	if(temporalReferences.size() == 0){
		throw new TranslatableAssertionError("TR.multiplicityShallBeOneOrMore");
	}
	temporalReferences.each{ temporalReference ->
		if(temporalReference.DateOfPublication.size() == 0 && temporalReference.DateOfLastRevision.size() == 0 && temporalReference.DateOfCreation.size() == 0){
			throw new TranslatableAssertionError("TR.atLeastOneDateType");
		}
		if(temporalReference.DateOfPublication.toString().length() == 0 && temporalReference.DateOfLastRevision.toString().length() == 0 && temporalReference.DateOfCreation.toString().length() == 0){
			throw new TranslatableAssertionError("TR.valueShallNotBeEmpty");
		}
		if(temporalReference.DateOfPublication.size() == 1 && !(temporalReference.DateOfPublication ==~ /\d{4}\-\d{2}\-\d{2}/)){
			throw new TranslatableAssertionError("TR.wrongDateFormat");
		}
		if(temporalReference.DateOfLastRevision.size() == 1 && !(temporalReference.DateOfLastRevision ==~ /\d{4}\-\d{2}\-\d{2}/)){
			throw new TranslatableAssertionError("TR.wrongDateFormat");
		}
		if(temporalReference.DateOfCreation.size() == 1 && !(temporalReference.DateOfCreation ==~ /\d{4}\-\d{2}\-\d{2}/)){
			throw new TranslatableAssertionError("TR.wrongDateFormat");
		}
	}
}]]></script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="2e9eace6-90c7-458b-ac9e-3d1b8b50f83a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at21-getcapabilities-temporal-reference" searchProperties="true"><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="5dc70814-c2d8-4eaa-a0b7-853b133bb90b"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-temporal-reference" id="7fcde33b-bfae-4b47-8b27-b2918d1b09eb"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);
def scenario = testRunner.testCase.testSuite.project.getPropertyValue("extended_capabilities_scenario");

if(scenario == '2'){
	def temporalReferences = capabilities.Capability.ExtendedCapabilities.TemporalReference;
	if(temporalReferences.size() == 0){
		throw new TranslatableAssertionError("TR.multiplicityShallBeOneOrMore");
	}
	if(temporalReferences.toString().length() == 0){
		throw new TranslatableAssertionError("TR.valueShallNotBeEmpty");
	}
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d698d80a-f0d7-4dfa-95f9-8bd050fd37be" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at22-getcapabilities-degree-of-conformity" searchProperties="true"><con:settings/><con:testStep type="testcasedependency" name="check-initial-case" id="7fc7aa8a-6325-4bbf-8aee-1f91176fb9b9"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-degree-conformity" id="676f05e3-eca4-4784-ab05-937b55e15d0f"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);
def scenario = testRunner.testCase.testSuite.project.getPropertyValue("extended_capabilities_scenario");

if(scenario == '2'){
	def conformity = capabilities.Capability.ExtendedCapabilities.Conformity;
	conformity.each{confor ->
		if(!(confor.Degree == 'notEvaluated' || confor.Degree == 'conformant' || confor.Degree == 'notConformant')){
			throw new TranslatableAssertionError("TR.wrongConformityDegree");
		}
	}
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="9b316d50-9263-4694-9d2b-5ee557cdcd30" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at23-getcapabilities-conformity" searchProperties="true"><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="d11dbc5e-6ba3-49f8-88a9-f50401c47f3e"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-conformity" id="6d1f1598-cb9d-4711-bcf9-48d0e2db8753"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);
def scenario = testRunner.testCase.testSuite.project.getPropertyValue("extended_capabilities_scenario");

if(scenario == '2'){
	def conformity = capabilities.Capability.ExtendedCapabilities.Conformity;
	if(conformity.size() == 0){
		throw new TranslatableAssertionError("TR.multiplicityShallBeOneOrMore");
	}
	if(conformity.toString().length() == 0){
		throw new TranslatableAssertionError("TR.valueShallNotBeEmpty");
	}
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="3afb9804-1b1e-4cb9-8005-327d6b11f70e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at24-getcapabilities-fees-node" searchProperties="true"><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="d0c2bd24-6233-4cba-a0a9-03f1cf1a55bd"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-fees" id="df70627f-7d03-4c3e-b2da-ab0582369f91"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

def fees = capabilities.Service.Fees;
if(fees.size() == 0){
	throw new TranslatableAssertionError("TR.multiplicityShallBeOneOrMore");
}
if(fees.toString().length() == 0){
	throw new TranslatableAssertionError("TR.valueShallNotBeEmpty");
}
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="7904a83f-adbc-470b-8e26-aecf3522fe95" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at25-getcapabilities-contact-organization" searchProperties="true"><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="dee035b7-21b6-48df-b28e-6ab8d2f8f9bf"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-contact-organization" id="08f87997-ab0e-4dd6-871a-fd9462a351df"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

def contactInformation = capabilities.Service.ContactInformation;
def contactOrganization = capabilities.Service.ContactInformation.ContactPersonPrimary.ContactOrganization;
if(contactInformation.size() != 1){
	throw new TranslatableAssertionError("TR.multiplicityShallBeOne");
}
if(contactOrganization.size() == 0){
	throw new TranslatableAssertionError("TR.multiplicityShallBeOneOrMore");
}
if(contactOrganization.toString().length() == 0){
	throw new TranslatableAssertionError("TR.valueShallNotBeEmpty");
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="a8271ecc-ffaf-40bc-bf6c-55654a5eb5a1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at26-getcapabilities-contact-position" searchProperties="true"><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="cd6c8a6e-417d-48f7-b6f1-0019227b11dc"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-contact-position" id="820872ec-88bb-4107-83fb-8d81b39acac2"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

def validValues = ['resourceProvider', 'custodian', 'owner', 'user', 'distributor', 'originator', 'pointOfContact', 'principalInvestigator', 'processor', 'publisher', 'author'];
def contactPosition = capabilities.Service.ContactInformation.ContactPosition;
if(contactPosition.size() == 0){
	throw new TranslatableAssertionError("TR.multiplicityShallBeOneOrMore");
}
contactPosition.each{contact ->
	if(!(contact in validValues)){
		throw new TranslatableAssertionError("TR.wrongContactPosition");
	}
};</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="3002d651-bd15-40ab-ad85-ab2a6792c688" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at27-getcapabilities-point-of-contact" searchProperties="true"><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="5f72ae9c-e477-4738-8aaa-027d1762bcbc"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-point-of-contact-extended-name-email" id="c6b85696-a5bc-4fa3-867e-ce64360725d4"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);
def scenario = testRunner.testCase.testSuite.project.getPropertyValue("extended_capabilities_scenario");

if(scenario == '2'){
	def metadataPointOfContact = capabilities.Capability.ExtendedCapabilities.MetadataPointOfContact;
	metadataPointOfContact.each{metadataPOC ->
		if(metadataPOC.OrganisationName.size() == 0){
			throw new TranslatableAssertionError("TR.multiplicityShallBeOneOrMore");
		}
		if(metadataPOC.OrganisationName.toString().length() == 0){
			throw new TranslatableAssertionError("TR.valueShallNotBeEmpty");
		}
		if(metadataPOC.EmailAddress.size() == 0){
			throw new TranslatableAssertionError("TR.multiplicityShallBeOneOrMore");
		}
		if(metadataPOC.EmailAddress.toString().length() == 0){
			throw new TranslatableAssertionError("TR.valueShallNotBeEmpty");
		}
	}
}
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="2358e779-eb98-4a6c-be08-218c4b43661c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at28-getcapabilities-point-of-contact-in-extendedcapabilities" searchProperties="true"><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="ac35c9c2-7ec3-4493-8265-de8326ea686d"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-point-of-contact-extended" id="1383ae93-0e23-4952-b2cf-05ae403e6567"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);
def scenario = testRunner.testCase.testSuite.project.getPropertyValue("extended_capabilities_scenario");

if(scenario == '2'){
	def metadataPointOfContact = capabilities.Capability.ExtendedCapabilities.MetadataPointOfContact;
	if(metadataPointOfContact.size() == 0){
		throw new TranslatableAssertionError("TR.multiplicityShallBeOneOrMore");
	}
}
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="bd8625dd-1305-43c3-86fd-e8ba25a89fc2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at29-getcapabilities-metadata-date" searchProperties="true"><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="a5a6ac85-2c4a-4774-ae5d-72c4c1544c55"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-metadata-date" id="ac649b4b-8f33-4379-a815-fdd49e35a988"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);
def scenario = testRunner.testCase.testSuite.project.getPropertyValue("extended_capabilities_scenario");

if(scenario == '2'){
	def date = capabilities.Capability.ExtendedCapabilities.MetadataDate;
	if(date.size() != 1){
		throw new TranslatableAssertionError("TR.multiplicityShallBeOne");
	}
	if(!(date ==~ /\d{4}\-\d{2}\-\d{2}/)){
		throw new TranslatableAssertionError("TR.wrongDateFormat");
	}
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="4744842a-f74f-48d2-8ae5-5ddc91647dc5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at30-getcapabilities-getcapabilities-operation-metadata" searchProperties="true"><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="8b0d052c-43f5-4c93-befd-a672f7e64b6e"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-getcapabilities-operation-metadata" id="2e240568-6974-433d-9bf1-c5df114974fe"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

def getCapabilitiesOperation = capabilities.Capability.Request.GetCapabilities;
if(getCapabilitiesOperation.size() != 1){
	throw new TranslatableAssertionError("TR.multiplicityShallBeOne");
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="6d222a6d-e824-4896-8b4b-8a74285286dd" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at31-getcapabilities-get-map-operation-metadata" searchProperties="true"><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="17452c0f-83ff-4a76-bbf1-e41e0b740857"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-getmap-operation-metadata" id="66176275-64b5-4c6d-bdc6-373c268c1689"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

def getMapOperation = capabilities.Capability.Request.GetMap;
def atLeastOneFormatValid = false;
if(getMapOperation.size() != 1){
	throw new TranslatableAssertionError("TR.multiplicityShallBeOne");
}
getMapOperation.Format.each{format ->
	if(format == 'image/png' || format == 'image/gif'){
		atLeastOneFormatValid = true;
	}
}
if(!atLeastOneFormatValid){
	throw new TranslatableAssertionError("TR.wrongGetMapMetadataImageFormat");
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d899acda-269d-47b1-aa23-93cb43774cfe" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at33-getcapabilities-layer-title" searchProperties="true"><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="21446a26-b09f-43da-a654-bdc0abc70ced"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-layer-title" id="1f85dfac-83ad-4cb2-9641-d1a95027e855"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

def layers = capabilities.Capability.depthFirst().findAll{it.name()=='Layer'};
layers.each{layer ->
	def title = layer.Title;
	if(title.size() != 1){
		throw new TranslatableAssertionError("TR.multiplicityShallBeOne");
	}
	if(title.toString().length() == 0){
		throw new TranslatableAssertionError("TR.valueShallNotBeEmpty");
	}
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="a8fff5a7-3c9c-4d41-b7d3-6a906ea8b4b5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at34-getcapabilities-layer-abstract" searchProperties="true"><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="1183e22f-9b1c-4ddd-9dbc-2c390bf284f4"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-layer-abstract" id="83d17113-c2af-4b8e-b3a9-3420d05edf92"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

def layers = capabilities.Capability.depthFirst().findAll{it.name()=='Layer'};
layers.each{layer ->
	def layerAbstract = layer.Abstract;
	if(layerAbstract.size() != 1){
		throw new TranslatableAssertionError("TR.multiplicityShallBeOne");
	}
	if(layerAbstract.toString().length() == 0){
		throw new TranslatableAssertionError("TR.valueShallNotBeEmpty");
	}
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="28f1f8be-6d25-4015-a28d-56bdb3594c5e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at35-getcapabilities-layer-keyword" searchProperties="true"><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="955e4b0d-f8a7-4b4b-b399-448db5a6c310"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-layer-keyword" id="442bf4b3-d548-4de7-a5fe-715a94df5066"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

def layers = capabilities.Capability.depthFirst().findAll{it.name()=='Layer'};
layers.each{layer ->
	def keyword = layer.KeywordList.Keyword;
	if(keyword.size() == 0){
		throw new TranslatableAssertionError("TR.multiplicityShallBeOneOrMore");
	}
	if(keyword.toString().length() == 0){
		throw new TranslatableAssertionError("TR.valueShallNotBeEmpty");
	}
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="85f56464-63a2-4b20-a6a8-a8dae26ed22a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at36-getcapabilities-layer-bounding-box" searchProperties="true"><con:settings/><con:testStep type="testcasedependency" name="Test Case Dependency" id="cdcd448c-eb47-46ee-bf5d-34045c92835e"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-layer-bounding-box" id="6f5d2bac-463d-46c6-a439-9d70056133c5"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

def layers = capabilities.Capability.depthFirst().findAll{it.name()=='Layer'};
layers.each{layer ->
	def current_bbox = [];
	layer.BoundingBox.each{bbox ->
		current_bbox &lt;&lt; bbox.@CRS;
	}
	layer.CRS.each{crs ->
		if(!(crs in current_bbox)){
			log.error('at36 - FAILED');
			throw new TranslatableAssertionError("TR.missingBoundingBoxForCRS");
		}
	}
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d90fcecc-dfc6-479f-bcbb-42309d26907d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at38-getcapabilities-layer-authority-url" searchProperties="true"><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="0df2c556-cf55-4e64-a0dd-bd19de1a4383"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="check-layer-identifier" id="2272f763-9fed-41f0-8519-ab91facc7c33"><con:settings/><con:config><script>import de.interactive_instruments.etf.suim.TranslatableAssertionError;
def tc = testRunner.testCase.testSuite.project.testSuites["GetCapabilities_Operation"].testCases["initial-testcase"];
def response = tc.getTestStepByName("http-request").getPropertyValue("Response");
def capabilities = new XmlSlurper(false, true).parseText(response);

def layers = capabilities.Capability.depthFirst().findAll{it.name()=='Layer'};
def authorityURL = capabilities.Capability.depthFirst().findAll{it.name()=='AuthorityURL' &amp;&amp; it.parent().name()=='Layer'};
if(authorityURL.size() == 0){
	throw new TranslatableAssertionError("TR.missingAuthorityURL");
}
def available_authorities = [];
authorityURL.each{authority ->
	if(authority.@name.toString().length() == 0){
		throw new TranslatableAssertionError("TR.missingAuthorityURLname");
	}
	else{
		available_authorities &lt;&lt; authority.@name;
	}
}
layers.each{layer ->
	if(layer.Identifier.size() == 0){
		throw new TranslatableAssertionError("TR.layersWithoutIdentifier");
	}
	else if(!(layer.Identifier.@authority in available_authorities)){
		throw new TranslatableAssertionError("TR.unavailableAuthorityURL");
	}
}
for (i = 0; i &lt;available_authorities.size(); i++) {
	def identifier = layers.Identifier.findAll{it.@authority==available_authorities[i] };
	if(identifier.size() != identifier.unique().size()){
		throw new TranslatableAssertionError("TR.notUniqueLayerIdentifier");
	}
}</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="0cc2fbb2-944c-43c0-9250-0116f6e7d237" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="at39-getcapabilities-layer-name" searchProperties="true"><con:settings/><con:testStep type="testcasedependency" name="check-initial-testcase" id="42070b1c-23cd-4b35-a5cc-e5231b16f269"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>452f3b7c-9db1-47c7-9621-6f76b761feea</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="7a16f8b2-5248-4ba5-a783-bd0c5534f153" name="GetMap_Operation"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:properties/></con:testSuite><con:testSuite id="c473835f-b004-4eda-b31e-ede4b8ba0d18" name="LinkViewService_Operation"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:properties/></con:testSuite><con:testSuite id="89d63b05-4fd4-4667-8668-c233180f9103" name="Language_Requirements"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:properties/></con:testSuite><con:properties><con:property><con:name>serviceEndpoint</con:name><con:value>http://b5m.gipuzkoa.eus/inspire/wms/gipuzkoa_wms</con:value></con:property><con:property><con:name>service</con:name><con:value>WMS</con:value></con:property><con:property><con:name>version</con:name><con:value>1.3.0</con:value></con:property><con:property><con:name>extended_capabilities_scenario</con:name><con:value>2</con:value></con:property><con:property><con:name>lastServiceEndpoint</con:name><con:value>http://b5m.gipuzkoa.eus/inspire/wms/gipuzkoa_wms</con:value></con:property><con:property><con:name>authUser</con:name><con:value/></con:property><con:property><con:name>authPwd</con:name><con:value/></con:property><con:property><con:name>etf.ignore.properties</con:name><con:value>service, version, extended_capabilities_scenario, lastServiceEndpoint, authUser, authPwd</con:value></con:property><con:property><con:name>etf.tag.ids</con:name><con:value>EID7c15a770-986a-4aa0-b4cd-7facbca96a1d</con:value></con:property><con:property><con:name>etf.translation.template.collection.id</con:name><con:value>EIDfa68eb83-a25a-4009-84dd-036de4539c93</con:value></con:property><con:property><con:name>etf.supported.test.object.type.ids</con:name><con:value>EID9981e87e-d642-43b3-ad5f-e77469075e74</con:value></con:property><con:property><con:name>etf.author</con:name><con:value>Consortium Bilbomatica, Guadaltel &amp; Geograma</con:value></con:property><con:property><con:name>etf.creation.date</con:name><con:value>2018-11-07T00:00:00</con:value></con:property><con:property><con:name>etf.last.editor</con:name><con:value>Consortium Bilbomatica, Guadaltel &amp; Geograma</con:value></con:property><con:property><con:name>etf.last.update.date</con:name><con:value>2018-11-07T00:00:00</con:value></con:property><con:property><con:name>etf.version</con:name><con:value>0.0.1</con:value></con:property><con:property><con:name>etf.reference</con:name><con:value>https://github.com/inspire-eu-validation/ets-repository/tree/master/service/vs-wms-soapui-project.xml</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>